CREATE TABLE PERSONAS (
    IDPERSONA SERIAL PRIMARY KEY,
    NOMBRE VARCHAR(50) NOT NULL,
    CONTRASEGNA VARCHAR(50) NOT NULL,
    IMGPERFIL BYTEA
);


CREATE TABLE CATEGORIAS (
    NOMBRE VARCHAR(20) PRIMARY KEY
);

CREATE TABLE RESTAURANTES (
    IDREST SERIAL PRIMARY KEY,
    NOMBRE VARCHAR(50) NOT NULL,
    CONTRASEGNA VARCHAR(50) NOT NULL,
    IMGPERFIL BYTEA,
    DIRECCION VARCHAR(50) NOT NULL,
    TELEFONO VARCHAR(20) NOT NULL,
    HORARIO VARCHAR(50) NOT NULL,
    CATEGORIA VARCHAR(20) NOT NULL,
    FOREIGN KEY (CATEGORIA) REFERENCES CATEGORIAS(NOMBRE)
);

CREATE TABLE PLATOS (
    IDPLATO SERIAL PRIMARY KEY,
    NOMBRE VARCHAR(50) NOT NULL,
    DESCRIPCION VARCHAR(50) NOT NULL,
    IMGPLATO BYTEA,
    RESTAURANTE INTEGER NOT NULL,
    FOREIGN KEY (RESTAURANTE) REFERENCES RESTAURANTES(IDREST)
);

CREATE TABLE POSTS (
    IDCOM SERIAL PRIMARY KEY,
    CONTENIDO VARCHAR(400) NOT NULL,
    IMAGEN BYTEA,
    FECHA TIMESTAMPTZ NOT NULL,
    CATEGORIA VARCHAR(20) NOT NULL,
    IDAUTORREST INTEGER,
    IDAUTORPERS INTEGER,
    FOREIGN KEY (CATEGORIA) REFERENCES CATEGORIAS(NOMBRE),
    FOREIGN KEY (IDAUTORREST) REFERENCES RESTAURANTES(IDREST),
    FOREIGN KEY (IDAUTORPERS) REFERENCES PERSONAS(IDPERSONA),
    CHECK (IDAUTORREST IS NOT NULL OR IDAUTORPERS IS NOT NULL)
);

CREATE TABLE REVIEWS (
    IDCOM SERIAL PRIMARY KEY,
    CONTENIDO VARCHAR(400) NOT NULL,
    IMAGEN BYTEA,
    FECHA TIMESTAMPTZ NOT NULL,
    IDAUTORPERS INTEGER NOT NULL,
    IDREST INTEGER,
    IDPLATO INTEGER,
    FOREIGN KEY (IDAUTORPERS) REFERENCES PERSONAS(IDPERSONA),
    FOREIGN KEY (IDREST) REFERENCES RESTAURANTES(IDREST),
    FOREIGN KEY (IDPLATO) REFERENCES PLATOS(IDPLATO),
    CHECK (IDREST IS NOT NULL OR IDPLATO IS NOT NULL)
);

CREATE TABLE RESPUESTAS (
    IDCOM SERIAL PRIMARY KEY,
    CONTENIDO VARCHAR(400) NOT NULL,
    IMAGEN BYTEA,
    FECHA TIMESTAMPTZ NOT NULL,
    IDAUTORREST INTEGER,
    IDAUTORPERS INTEGER,
    IDPOST INTEGER NOT NULL,
    FOREIGN KEY (IDAUTORREST) REFERENCES RESTAURANTES(IDREST),
    FOREIGN KEY (IDAUTORPERS) REFERENCES PERSONAS(IDPERSONA),
    FOREIGN KEY (IDPOST) REFERENCES POSTS(IDCOM),
    CHECK (IDAUTORREST IS NOT NULL OR IDAUTORPERS IS NOT NULL)
);

CREATE TABLE VALORA (
    IDRESTAURANTE INTEGER NOT NULL,
    IDPERSONA INTEGER NOT NULL,
    VALORACION INTEGER NOT NULL CHECK (VALORACION >= 0 AND VALORACION <= 5),
    PRIMARY KEY (IDRESTAURANTE, IDPERSONA),
    FOREIGN KEY (IDRESTAURANTE) REFERENCES RESTAURANTES(IDREST),
    FOREIGN KEY (IDPERSONA) REFERENCES PERSONAS(IDPERSONA)
);

CREATE TABLE REACCIONA (
    IDREACCION SERIAL PRIMARY KEY,
    IDPOST INTEGER,
    IDREVIEW INTEGER,
    IDRESPUESTA INTEGER,
    IDPERS INTEGER NOT NULL,
    REACCION BOOLEAN NOT NULL, -- false = dislike, 1 = like
    FOREIGN KEY (IDPOST) REFERENCES POSTS(IDCOM),
    FOREIGN KEY (IDREVIEW) REFERENCES REVIEWS(IDCOM),
    FOREIGN KEY (IDRESPUESTA) REFERENCES RESPUESTAS(IDCOM),
    FOREIGN KEY (IDPERS) REFERENCES PERSONAS(IDPERSONA),
    -- CHECK that only one of the three post / review or response is not null
    CHECK (
        (IDPOST IS NOT NULL AND IDREVIEW IS NULL AND IDRESPUESTA IS NULL) OR
        (IDPOST IS NULL AND IDREVIEW IS NOT NULL AND IDRESPUESTA IS NULL) OR
        (IDPOST IS NULL AND IDREVIEW IS NULL AND IDRESPUESTA IS NOT NULL)
    )
);

-- -- DROP ALL TABLES:
-- -- DROP TABLE REACCIONA;
-- -- DROP TABLE VALORA;
-- -- DROP TABLE RESPUESTAS;
-- -- DROP TABLE REVIEWS;
-- -- DROP TABLE POSTS;
-- -- DROP TABLE PLATOS;
-- -- DROP TABLE RESTAURANTES;
-- -- DROP TABLE CATEGORIAS;
-- -- DROP TABLE PERSONAS;
